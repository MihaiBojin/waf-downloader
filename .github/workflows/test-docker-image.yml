name: Test the Docker Image build

on:
  # Trigger on PRs
  pull_request:
    branches:
      - main
  # And on pushes to main
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configuring developer tools
        run: |
          task create-venv
          eval "$(task venv)"
          task setup

      - name: Generate build tags
        run: |
          eval "$(task venv)"
          source "scripts/functions.bash"

          OWNER_REPO="$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" # format: org/repo
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)

          TAG="$(get_tag_at_head)"
          if [ -z "$TAG" ]; then
            TAG="${{ github.sha }}"
          fi

          echo "OWNER_REPO=$OWNER_REPO" >> "$GITHUB_ENV"
          echo "REPO_NAME=$REPO_NAME" >> "$GITHUB_ENV"
          echo "TAG=$TAG" >> "$GITHUB_ENV"
      - name: Generate build tags
        run: |
          eval "$(task venv)"
          source "scripts/functions.bash"

          task docker-build

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_REPO }}:${{ github.sha }}
            ghcr.io/${{ env.OWNER_REPO }}:${{ env.TAG }}
            ghcr.io/${{ env.OWNER_REPO }}:latest
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:${{ github.sha }}
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:${{ env.TAG }}
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:latest
