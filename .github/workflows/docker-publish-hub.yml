name: Publish Docker Image to Docker Hub

on:
  # Trigger only on v0.* tag pushes
  push:
    tags:
      - "v0.*"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read
      id-token: write
      attestations: write

    env:
      REGISTRY: docker.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configuring developer tools
        run: |
          task create-venv
          eval "$(task venv)"
          task setup

          eval "$(task venv)"
          source "scripts/functions.bash"
          echo "PROJECT_NAME=$(get_project_name)" >> $GITHUB_ENV
          echo "TAG=$(get_tag_at_head)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          eval "$(task venv)"
          task docker-build
          echo docker tag "$PROJECT_NAME:$TAG" "${{ vars.DOCKERHUB_USERNAME }}:$PROJECT_NAME:${{ github.sha }}"
          docker tag "$PROJECT_NAME:$TAG" "${{ vars.DOCKERHUB_USERNAME }}:$PROJECT_NAME:${{ github.sha }}"

          docker tag "$PROJECT_NAME:$TAG" "${{ vars.DOCKERHUB_USERNAME }}:$PROJECT_NAME:$TAG"
          docker tag "$PROJECT_NAME:$TAG" "${{ vars.DOCKERHUB_USERNAME }}:$PROJECT_NAME:latest"

      - name: Push Docker image to GitHub Container Registry
        run: |
          eval "$(task venv)"
          task docker-build
          docker push "${{ vars.DOCKERHUB_USERNAME }}:$PROJECT_NAME:${{ github.sha }}"
          docker push "${{ vars.DOCKERHUB_USERNAME }}:$PROJECT_NAME:$TAG"
          docker push "${{ vars.DOCKERHUB_USERNAME }}:$PROJECT_NAME:latest"

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.PROJECT_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
