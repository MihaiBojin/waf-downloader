name: Push OCI image

on:
  workflow_run:
    workflows: [Upload to PyPI]
    types:
      - completed

jobs:
  push:
    runs-on: ubuntu-latest

    permissions:
      actions: read
      packages: write
      contents: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.39.2
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: pip install toml
      - id: releasetools
        uses: releasetools/bash@v0
        with:
          version: "v0.0.6"

      - name: Configuring developer tools
        run: |
          task create-venv
          eval "$(task venv)"
          task install

      - name: Generate build tags
        run: |
          eval "$(task venv)"
          source "scripts/functions.bash"

          OWNER_REPO="$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" # format: org/repo
          echo "OWNER_REPO=$OWNER_REPO" >> "$GITHUB_ENV"

          REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
          echo "REPO_NAME=$REPO_NAME" >> "$GITHUB_ENV"

          VERSION="$(rt git::version_or_sha)"
          echo "Updating version in '$VERSION_FILE' to: $VERSION" >&2
          echo "$VERSION" > ./VERSION
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v0.')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Log in to Docker Hub
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v0.')
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker multiplatform image
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          # Only push image to registries on tag pushes
          push: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v0.')
          labels: |
            org.opencontainers.image.title=Cloudflare Web Application Firewall log downloader
            org.opencontainers.image.description="Cloudflare Web Application Firewall log downloader for a specified zone and time range"
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=Apache-2.0
          tags: |
            ghcr.io/${{ env.OWNER_REPO }}:${{ github.sha }}
            ghcr.io/${{ env.OWNER_REPO }}:${{ env.VERSION }}
            ghcr.io/${{ env.OWNER_REPO }}:latest
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:${{ github.sha }}
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:${{ env.VERSION }}
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:latest

      - name: Generate SBOM (GHCR)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v0.')
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ env.OWNER_REPO }}:${{ env.VERSION }}
          artifact-name: sbom_ghcr_${{ env.REPO_NAME }}_${{ env.VERSION }}.spdx.json

      - name: Generate SBOM (Docker Hub)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v0.')
        uses: anchore/sbom-action@v0
        with:
          image: docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:${{ env.VERSION }}
          artifact-name: sbom_docker_${{ env.REPO_NAME }}_${{ env.VERSION }}.spdx.json

      - name: Generate artifact attestation for GitHub Container Registry
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v0.')
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ env.OWNER_REPO }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation for Docker Hub
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v0.')
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v0.')
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          make_latest: true
